name: IaC Apply Terraform Environment

on:
  workflow_dispatch:
    inputs:
      parameter-name:
        description: 'Apply Infrastructure'
        required: true

jobs:
  Apply_Infrastructure:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TF_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TF_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          backend-config: |
            bucket = "terraformbackendaccess"
            key    = "tfbackendaccess.tfstate"
            region = "us-east-1"
          terraform_version: 1.4.2
      
      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init -input=false  
        env:
          TF_VAR_access_key: ${{ secrets.TF_AWS_ACCESS_KEY_ID }}
          TF_VAR_secret_key: ${{ secrets.TF_AWS_SECRET_ACCESS_KEY }}  

      - name: Plan Terraform
        id: plan
        continue-on-error: true
        working-directory: ./terraform
        run: |
          terraform plan -input=false -no-color -out=tfplan \
          && terraform show -no-color tfplan  
        env:
          TF_VAR_access_key: ${{ secrets.TF_AWS_ACCESS_KEY_ID }}
          TF_VAR_secret_key: ${{ secrets.TF_AWS_SECRET_ACCESS_KEY }}  
  
      - name: Apply Terraform
        if: steps.plan.outcome == 'success'
        id: apply
        continue-on-error: true
        working-directory: ./terraform
        run: |
          terraform apply \
          -input=false \
          -no-color \
          tfplan
          echo "AK=$(terraform output -json | jq -r '.AK.value')" >> .env
          echo "SK=$(terraform output -json | jq -r '.SK.value')" >> .env
          aws s3 cp .env s3://terraformbackendaccess/
        env:
          TF_VAR_access_key: ${{ secrets.TF_AWS_ACCESS_KEY_ID }}
          TF_VAR_secret_key: ${{ secrets.TF_AWS_SECRET_ACCESS_KEY }}